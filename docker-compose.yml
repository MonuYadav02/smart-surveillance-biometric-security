version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - DATABASE_URL=postgresql://postgres:password@db:5432/surveillance_db
      - REDIS_URL=redis://redis:6379
      - STORAGE_PATH=/app/storage
      - AI_MODEL_PATH=/app/models
    volumes:
      - ./storage:/app/storage
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - surveillance-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=surveillance_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - surveillance-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - surveillance-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - surveillance-network

volumes:
  postgres_data:
  redis_data:

networks:
  surveillance-network:
    driver: bridge